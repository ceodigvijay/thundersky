{"version":3,"sources":["assets/clearDay.svg","assets/clearNight.svg","assets/clearRainy.svg","assets/cloudyDay.svg","assets/cloudyNight.svg","assets/rain.svg","assets/snowy.svg","assets/thunder.svg","Components/Search.js","Components/iconManage.js","Components/TodayWeather.js","Components/ForecastDay.js","Components/Forecast.js","Components/CurrentCity.js","Components/Preloader/Preloader.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Search","state","city","onChangeHandler","event","_this","setState","target","value","_this2","this","react_default","a","createElement","id","index_es_default","placeholder","options","appId","apiKey","language","type","onChange","_ref","query","rawAnswer","suggestion","suggestionIndex","name","onSuggestions","_ref2","suggestions","console","log","onCursorChanged","_ref3","suggestonIndex","onClear","onLimit","_ref4","message","onClick","props","searchClk","bind","Component","findIco","code","clearDay","clearNight","clearRainy","cloudyDay","cloudyNight","rain","snowy","thunder","todayWeather","className","src","today","condition","alt","temperature","text","atmosphere","humidity","visibility","pressure","astronomy","sunrise","sunset","forecastDay","style","paddingBottom","day","width","height","high","forecast","map","item","index","ForecastDay","key","date","low","currentCity","textAlign","padding","Preloader","headers","Access-Control-Allow-Origin","axios","defaults","post","App","isLoading","error","errorMessage","searchHandler","get","then","response","data","current_observation","forecasts","catch","Components_Search","TodayWeather","Forecast","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fa3ba00c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/clearDay.7f93fbdb.svg\";","module.exports = __webpack_public_path__ + \"static/media/clearNight.a3f3f38d.svg\";","module.exports = __webpack_public_path__ + \"static/media/clearRainy.c17e7a5d.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloudyDay.109368f6.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloudyNight.bf91ac0f.svg\";","module.exports = __webpack_public_path__ + \"static/media/rain.c915395f.svg\";","module.exports = __webpack_public_path__ + \"static/media/snowy.67d63a14.svg\";","module.exports = __webpack_public_path__ + \"static/media/thunder.7142c78b.svg\";","import React, { Component } from \"react\";\nimport \"./style.css\";\nimport AlgoliaPlaces from 'algolia-places-react';\n\nclass Search extends Component {\n  state = {\n    city: \"Sultanpur\"\n  };\n\n  onChangeHandler = event => {\n    this.setState({city: event.target.value})\n  };\n\n  render() {\n    return (\n      <div id=\"search-box\">\n        {/* <input type=\"text\" placeholder=\"Enter Your City\" onChange={this.onChangeHandler}/> */}\n        <AlgoliaPlaces\n      placeholder='Write an address here'\n \n      options={{\n        appId: 'pl52XWI66FCZ',\n        apiKey: 'c198414e6f9e0280ea1c3b202e7c954e',\n        language: 'sv',\n        type: 'city',\n        // Other options from https://community.algolia.com/places/documentation.html#options\n      }}\n \n      onChange={({ query, rawAnswer, suggestion, suggestionIndex }) => \n      this.setState({city: suggestion.name})}\n \n      onSuggestions={({ rawAnswer, query, suggestions }) => \n        console.log('Fired when dropdown receives suggestions. You will receive the array of suggestions that are displayed.')}\n \n      onCursorChanged={({ rawAnswer, query, suggestion, suggestonIndex }) => \n        console.log('Fired when arrows keys are used to navigate suggestions.')}\n \n      onClear={() => \n        console.log('The input is cleared.')}\n \n      onLimit={({ message }) => \n        console.log('You reached your current rate limit.')}\n \n      />\n        <button onClick={this.props.searchClk.bind(this, this.state.city)}>Search</button>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n","import clearDay from '../assets/clearDay.svg'\nimport clearNight from '../assets/clearNight.svg'\nimport clearRainy from '../assets/clearRainy.svg'\nimport cloudyDay from '../assets/cloudyDay.svg'\nimport cloudyNight from '../assets/cloudyNight.svg'\nimport rain from '../assets/rain.svg'\nimport snowy from '../assets/snowy.svg'\nimport thunder from '../assets/thunder.svg'\n\nfunction findIco(code) {\n  switch (true) {\n    case code === 32:\n    case code === 34:\n    case code === 36:\n      return clearDay;\n    case code === 31:\n    case code === 33:\n      return(clearNight);\n    case code === 44:\n      return(clearRainy);\n    case code >= 18 && code <= 26:\n    case code === 28:\n    case code === 30:\n      return(cloudyDay);\n    case code === 27:\n    case code === 29:\n      return(cloudyNight);\n    case code >= 5 && code <= 12:\n    case code === 35:\n    case code === 40:\n      return(rain);\n    case code >= 13 && code <= 17:\n    case code >= 41 && code <= 43:\n    case code === 46:\n      return(snowy);\n    case code >= 0 && code <= 4:\n    case code >= 37 && code <= 39:\n    case code === 45:\n    case code === 47:\n      return(thunder);\n\n    default:\n      return(\"Error\");\n  }\n}\n\nexport default findIco;\n","import React from \"react\";\nimport \"./style.css\";\nimport findIco from \"./iconManage\";\n\nfunction todayWeather(props) {\n  return (\n    <div id=\"today-weather\">\n      <div className=\"today-detail\">\n        <img src={findIco(props.today.condition.code)} alt=\"Weather\" />\n      </div>\n      <div className=\"today-detail\">\n        <h2>{props.today.condition.temperature}&deg;C</h2>\n        <p>{props.today.condition.text}</p>\n      </div>\n      <div className=\"detail\">\n        <h3>Humidity: {props.today.atmosphere.humidity}</h3>\n        <h3>Visibility: {props.today.atmosphere.visibility}</h3>\n        <h3>Pressure: {props.today.atmosphere.pressure}</h3>\n        <h3>Sunrise: {props.today.astronomy.sunrise}</h3>\n        <h3>Sunset: {props.today.astronomy.sunset} </h3>\n      </div>\n    </div>\n  );\n}\n\nexport default todayWeather;\n","import React from \"react\";\nimport findIco from './iconManage'\n\nfunction forecastDay(props) {\n  console.log(props.code)\n  findIco(props.code)\n  \n  return (\n    <div className=\"forecast-day\">\n      <h2 style={{ paddingBottom: \"15px\" }}>{props.day}</h2>\n      <img src={findIco(props.code)} width=\"100px\" height=\"100px\" alt=\"forecast\" />\n      <h2>\n        {/* {props.low}-*/}{props.high}&deg;C\n      </h2>\n      <p>{props.text}</p>\n    </div>\n  );\n}\n\nexport default forecastDay;\n","import React from \"react\";\nimport ForecastDay from \"./ForecastDay\";\nimport \"./style.css\";\n\nfunction forecast(props) {\n  return (\n    <div id=\"forecast\">\n      {props.forecast.map((item, index) => {\n        return (\n          <ForecastDay\n            key={index}\n            day={item.day}\n            date={item.date}\n            low={item.low}\n            high={item.high}\n            text={item.text}\n            code={item.code}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default forecast;\n","import React from \"react\";\n\nexport default function currentCity(props) {\n  return <div style={{textAlign: \"center\", padding: \"20px\"}}><h1>Weather of {props.city}</h1></div>;\n}\n","import React from \"react\";\nimport './preloader.css'\nexport default function Preloader() {\n  return (\n    <div>\n      <div id=\"load-wrapper\">\n        <div id=\"loader\">\n          <span className=\"ringFour\" />\n          <span className=\"ringThree\" />\n          <span className=\"colorRing\" />\n          <span className=\"ringTwo\" />\n          <span className=\"ball\" />\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Search from \"./Components/Search\";\nimport TodayWeather from \"./Components/TodayWeather\";\nimport Forecast from \"./Components/Forecast\";\nimport CurrentCity from \"./Components/CurrentCity\";\nimport Preloader from \"./Components/Preloader/Preloader\";\nimport axios from \"axios\";\n\nconst headers = { \"Access-Control-Allow-Origin\": \"*\" };\naxios.defaults.headers.post[\"Content-Type\"] =\n  \"application/x-www-form-urlencoded\";\n\nclass App extends Component {\n  state = {\n    city: \"Lucknow\",\n    today: null,\n    forecast: null,\n    isLoading: false,\n    error: false,\n    errorMessage: \"\"\n  };\n  componentDidMount() {\n    console.log(\"ComponentWillMount Ran\");\n    let city = this.state.city;\n    this.setState({ isLoading: true });\n    axios\n      .get(\"https://thundersky.herokuapp.com/getData/\" + city, headers)\n      .then(response => {\n        console.log(\"response\");\n        console.log(response);\n        this.setState({\n          today: response.data.current_observation,\n          forecast: response.data.forecasts,\n          isLoading: false\n        });\n        console.log(\"State\");\n        console.log(this.state);\n        // throw Error(\"Some thing Occured\");\n      })\n      .catch(error => {\n        this.setState({ error: true, errorMessage: error.message });\n      });\n  }\n\n  searchHandler = city => {\n    this.setState({ city: city, isLoading: true });\n    axios\n      .get(\"https://thundersky.herokuapp.com/getData/\" + city, headers)\n      .then(response => {\n        console.log(\"response\");\n        console.log(response);\n        this.setState({\n          today: response.data.current_observation,\n          forecast: response.data.forecasts,\n          isLoading: false\n        });\n        console.log(\"State\");\n        console.log(this.state);\n        // throw Error(\"Some thing Occured\");\n      })\n      .catch(error => {\n        this.setState({ error: true, errorMessage: error.message });\n      });\n    console.log(city);\n  };\n\n  render() {\n    if (this.state.error) {\n      return (\n        <div>\n          <h1>Some Error occured... </h1>\n          <div>Message ===>>>> {this.state.errorMessage}</div>\n        </div>\n      );\n    } else if (\n      this.state.today &&\n      this.state.forecast &&\n      !this.state.isLoading\n    ) {\n      return (\n        <div className=\"App\">\n          <Search city={this.state.city} searchClk={this.searchHandler} />\n          \n          <CurrentCity city={this.state.city} />\n          <TodayWeather today={this.state.today} />\n          <Forecast forecast={this.state.forecast} />\n        </div>\n      );\n    } else {\n      return <Preloader />;\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}